{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useSignUp } from \"@/composables/useSignUp\";\nexport default {\n  setup() {\n    const {\n      error,\n      isPending,\n      signup\n    } = useSignUp();\n    const router = useRouter();\n    const fullname = ref(\"\");\n    const email = ref(\"\");\n    const password = ref(\"\");\n\n    async function onsubmit() {\n      await signup(email.value, password.value, fullname.value);\n      if (!error.value) router.push({\n        name: 'Home',\n        params: {}\n      });\n    }\n\n    return {\n      error,\n      fullname,\n      email,\n      password,\n      isPending,\n      onsubmit\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAmDA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAGA,eAAe;EACbC,KAAK,GAAG;IACN,MAAM;MAAEC,KAAF;MAASC,SAAT;MAAoBC;IAApB,IAA+BJ,SAAS,EAA9C;IACA,MAAMK,MAAK,GAAIN,SAAS,EAAxB;IAEA,MAAMO,QAAO,GAAIR,GAAG,CAAC,EAAD,CAApB;IACA,MAAMS,KAAI,GAAIT,GAAG,CAAC,EAAD,CAAjB;IACA,MAAMU,QAAO,GAAIV,GAAG,CAAC,EAAD,CAApB;;IACA,eAAeW,QAAf,GAA0B;MACxB,MAAML,MAAM,CAACG,KAAK,CAACG,KAAP,EAAcF,QAAQ,CAACE,KAAvB,EAA8BJ,QAAQ,CAACI,KAAvC,CAAZ;MACA,IAAG,CAACR,KAAK,CAACQ,KAAV,EAAiBL,MAAM,CAACM,IAAP,CAAY;QAACC,IAAI,EAAE,MAAP;QAAeC,MAAM,EAAE;MAAvB,CAAZ;IACnB;;IACA,OAAO;MAAEX,KAAF;MAASI,QAAT;MAAmBC,KAAnB;MAA0BC,QAA1B;MAAoCL,SAApC;MAA+CM;IAA/C,CAAP;EACF;;AAba,CAAf","names":["ref","useRouter","useSignUp","setup","error","isPending","signup","router","fullname","email","password","onsubmit","value","push","name","params"],"sourceRoot":"","sources":["/home/thanhphong/Downloads/VueJS/Project-RHP/i-money/src/views/register.vue"],"sourcesContent":["<template>\n  <div class=\"mt-8\">\n    <div class=\"container mx-auto px-8\">\n      <!-- Start: Form -->\n      <form class=\"flex flex-col justify-start space-y-6\" @submit.prevent=\"onsubmit\">\n        <div class=\"row\">\n          <label class=\"flex flex-col\" for=\"fullname\">\n            <span class=\"font-semibold\">Full Name</span>\n            <input id=\"fullname\" type=\"text\" class=\"px-4 py-3 rounded-lg border border-gray-100 mt-1\"\n              placeholder=\"iMoney...\" v-model=\"fullname\">\n          </label>\n        </div>\n        <div class=\"row\">\n          <label class=\"flex flex-col\" for=\"email\">\n            <span class=\"font-semibold\">Email Address</span>\n            <input id=\"email\" type=\"email\" class=\"px-4 py-3 rounded-lg border border-gray-100 mt-1\"\n              placeholder=\"example@gmail.com\" autocomplete=\"username\" v-model=\"email\">\n          </label>\n        </div>\n        <div class=\"row\">\n          <label class=\"flex flex-col\" for=\"password\">\n            <span class=\"font-semibold\">Password</span>\n            <input id=\"password\" type=\"password\" class=\"px-4 py-3 rounded-lg border border-gray-100 mt-1\"\n              placeholder=\"Password\" autocomplete=\"current-password\" v-model=\"password\">\n          </label>\n        </div>\n        <div class=\"row\">\n          <button v-if=\"!isPending\" type=\"submit\"\n            class=\"py-3 text-center w-full bg-primary text-white font-bold rounded-lg\">Sign\n            up</button>\n          <button v-else type=\"button\"\n            class=\"py-3 text-center w-full bg-gray-700 text-white font-bold rounded-lg cursor-not-allowed\"\n            disabled>Loading...</button>\n        </div>\n      </form>\n      <!-- Start: Error -->\n      <div v-if=\"error\" class=\"text-left mt-4\">\n        <span class=\"text-rose-700\">{{ error }}</span>\n      </div>\n      <!-- Start: Direction   -->\n      <div class=\"w-full text-center mt-6\">\n        <span class=\"font-semibold\">I'm ready a member</span>\n        <span class=\"ml-1\">\n          <router-link :to=\"{ name: 'Login', params: {} }\" class=\"text-primary font-bold\">Sign In</router-link>\n        </span>\n      </div>\n    </div>\n  </div>\n\n</template>\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useSignUp } from \"@/composables/useSignUp\"\n\n\nexport default {\n  setup() {\n    const { error, isPending, signup } = useSignUp()\n    const router = useRouter()\n\n    const fullname = ref(\"\")\n    const email = ref(\"\")\n    const password = ref(\"\")\n    async function onsubmit() {\n      await signup(email.value, password.value, fullname.value)\n      if(!error.value) router.push({name: 'Home', params: {} })\n    }\n    return { error, fullname, email, password, isPending, onsubmit }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}